# Reference documentation about workflow syntax: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#defaultsrun
# Building and testing Powershell guide: https://docs.github.com/en/actions/guides/building-and-testing-powershell

# Jobs are run in parallel, unless a 'needs' condition is specified
# Steps are always run sequentially

name: CI/CD
on: [push]
jobs:
  # Test: perform some code quality test before building
  # Publishing uses this Github Action: https://github.com/EnricoMi/publish-unit-test-result-action
  Test:
  # Requires windows
    runs-on: windows-latest
    steps:
      # Make your repo available to workflow: https://github.com/actions/checkout
      - name: Check out repository code
        uses: actions/checkout@v2
      # Install InvokeBuild if not present
      - name: Install InvokeBuild module on the runner
        run: |
          if (-not (Get-Module -Name InvokeBuild -ListAvailable)) {
            Install-Module InvokeBuild -Scope CurrentUser -Force
          }
          Import-Module InvokeBuild
      # Analyze code with PSScriptAnalyzer and publish the results
      - name: Analyze code with PSScriptAnalyzer
        run: |
          Invoke-Build -Task Analyze
      - name: Publish PSScriptAnalyzer Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          check_name: "Test/PSScriptAnalyzer-results" 
          files: ./**/AnalysisResults*.xml
      # Perform Pester tests and publish the results
      - name: Test with Pester
        run: |
          Invoke-Build -Task Test
      - name: Publish Pester Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          check_name: "Test/Pester-results" 
          files: ./**/TestResults*.xml
      # Verify code coverage using Pester and publish the results
      - name: Verify code coverage
        run: |
          Invoke-Build -Task CodeCoverage    
      - name: Publish Pester Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          check_name: "Test/CodeCoverage-results" 
          files: ./**/CodeCoverageResults*.xml